@page "{messageId}"
@using Schools.Application.Utilities
@using Schools.Application.Utilities.Convertors
@using Schools.Domain.Models.Users
@using Schools.Domain.Models.Users.Messages
@using Schools.Domain.Repository.InterfaceRepository.Users
@model Schools.WebApp.Pages.UserPanel.Messages.ShowModel
@inject IUserRepository _User
@{
    var user = _User.GetUserWithRelations(User.GetUserId());
    ViewData["title"] = $"تیکت  پشتیبانی";
}
@section Meta
{
    <link rel="stylesheet" type="text/css" href="/css/jquery.Bootstrap-PersianDateTimePicker.css">
    <link rel="stylesheet" type="text/css" href="/css/account.css">
}
@if (Model.UserMessage == null)
{

}
else
{

    @section Topic_Layer
    {
        <div class="container page-title">
            <h1><a href="javascript:void(0)"> حساب کاربری </a></h1>
            <ul itemtype="http://schema.org/BreadcrumbList" class="breadcrumb">
                <li itemtype="http://schema.org/ListItem" itemscope="" itemprop="itemListElement"><a href="/" itemprop="item"><span itemprop="name"> بانک اطلاعاتی آموزشگاه ها </span></a></li>
                <li itemtype="http://schema.org/ListItem" itemscope="" itemprop="itemListElement">
                    <a href="/UserPanel" itemprop="item">
                        <span itemprop="name"> حساب کاربری @user.Name @user.Family </span>
                    </a>
                </li>
                <li itemtype="http://schema.org/ListItem" itemscope="" itemprop="itemListElement">
                    <a href="/UserPanel/Messages" itemprop="item">
                        <span itemprop="name"> پیام های خصوصی </span>
                    </a>
                </li>
                <li itemtype="http://schema.org/ListItem" itemscope="" itemprop="itemListElement">
                    <a href="javascript:void(0)" itemprop="item" class="current">
                        <span itemprop="name"> @Model.UserMessage.MessageTitle </span>
                    </a>
                </li>
            </ul>
        </div>
    }
    <div class="account-layer">
        <div class="container">
            @{
                var menuModel = new Tuple<User, string>(user, "messages");
            }
            <partial name="Shared/_RightMenu" model="menuModel" />
            <div class="left-side">
                <div class="account-heading layer-style">
                    <span class="status green"> وضعیت : <i> @(user.IsActive ? "فعال" : "غییر فعال") </i></span>
                    <a href="/UserPanel/Tickets/Add"> <i class="zmdi zmdi-plus"></i> ثبت تیکت </a>
                </div>
                <div class="account-content-layer layer-style">
                    <h3> @Model.UserMessage.MessageTitle </h3>
                    <div class="inner">
                        <div class="support-layer">
                            <div class="ticket-box answer">
                                <div class="head">
                                    <span class="resgiter-date"> تاریخ ثبت : <i>@Model.UserMessage.CreateDate.ToShamsi()</i> </span>
                                    @if (Model.UserMessage.SenderId == User.GetUserId())
                                    {
                                        <span class="status">  ارتباط با : <i>@Model.UserMessage.Receiver.UserName</i> </span>

                                    }
                                    @if (Model.UserMessage.ReceiverId == User.GetUserId())
                                    {
                                        <span class="status">  ارتباط با : <i>@Model.UserMessage.Sender.UserName</i> </span>

                                    }
                                </div>
                                <div class="question">
                                    <p>
                                        @Html.Raw(Model.UserMessage.SenderText)
                                    </p>
                                </div>
                                <div class="answers">
                                    @foreach (var message in Model.UserMessage.MessageContents)
                                    {
                                        <div class="@((message.UserId==User.GetUserId()?"you":"supporter"))">
                                            <span> تاریخ ثبت : @message.SendDate.ToShamsi() </span>
                                            @Html.Raw(message.Text)
                                        </div>
                                    }
                                    <form class="form-layer-style" method="post">
                                        <div class="row">
                                            <div class="col-xs-12">
                                                <div class="textarea-layer">
                                                    <label><i class="zmdi zmdi-assignment"></i>  متن پاسخ </label>
                                                    <textarea id="message_text" required="" name="messageText"> </textarea>
                                                </div>
                                            </div>
                                            <div class="col-md-3 col-sm-3 col-xs-12 pull-left">
                                                <button class="button-st green" type="submit"> <span> ثبت پیام </span> </button>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@section Scripts
{
    <script src="/ckeditor5/build/ckeditor.js"></script>

    <script src="/js/account.js"></script>
    <script>
        ClassicEditor
            .create(document.querySelector('#message_text'), {
                toolbar: {
                    items: [
                        'heading',
                        '|',
                        'fontSize',
                        'bold',
                        'italic',
                        'link',
                        '|',
                        'bulletedList',
                        'numberedList',
                        '|',
                        'codeblock',
                        'blockQuote',
                        'insertTable',
                        '|',
                        'indent',
                        'outdent',
                        '|',
                        'undo',
                        'redo',
                    ]
                },
                language: 'fa',
                table: {
                    contentToolbar: [
                        'tableColumn',
                        'tableRow',
                        'mergeTableCells'
                    ]
                },
                licenseKey: '',

            })
            .then(editor => {
                window.editor = editor;
            })
            .catch(error => {
                console.error('Oops, something gone wrong!');
                console.error('Please, report the following error in the https://github.com/ckeditor/ckeditor5 with the build id and the error stack trace:');
                console.warn('Build id: 1hgh63bxm5nk-t1efehf8ocs2');
                console.error(error);
            });

        $(document).ready(function () {
            $(".ck-voice-label").css("display", "none");
        });
    </script>
}
